[{"C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\index.js":"1","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\App.js":"2","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\reportWebVitals.js":"3","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Database\\firebase.js":"4","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Booking.jsx":"5","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Info.jsx":"6","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Course.jsx":"7","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Place.jsx":"8","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Header.jsx":"9","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Review.jsx":"10","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Dogway.jsx":"11","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\School.jsx":"12","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Footer.jsx":"13","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Glogin.jsx":"14","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Register.jsx":"15","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\User.jsx":"16","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Login.jsx":"17","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Parents.jsx":"18","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Btn.jsx":"19","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Home.jsx":"20","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Componment\\Side.jsx":"21","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Componment\\Logo2.jsx":"22","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Componment\\Logo.jsx":"23","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Componment\\Mainphotos.jsx":"24"},{"size":682,"mtime":1670202672944,"results":"25","hashOfConfig":"26"},{"size":2059,"mtime":1670374962396,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1668556161842,"results":"28","hashOfConfig":"26"},{"size":998,"mtime":1669871640915,"results":"29","hashOfConfig":"26"},{"size":7743,"mtime":1669702182963,"results":"30","hashOfConfig":"26"},{"size":1781,"mtime":1669705353860,"results":"31","hashOfConfig":"26"},{"size":5928,"mtime":1670215998161,"results":"32","hashOfConfig":"26"},{"size":14387,"mtime":1670208383501,"results":"33","hashOfConfig":"26"},{"size":384,"mtime":1669699556346,"results":"34","hashOfConfig":"26"},{"size":4828,"mtime":1669940905568,"results":"35","hashOfConfig":"26"},{"size":5546,"mtime":1669704078979,"results":"36","hashOfConfig":"26"},{"size":1082,"mtime":1670223944755,"results":"37","hashOfConfig":"26"},{"size":742,"mtime":1669692352642,"results":"38","hashOfConfig":"26"},{"size":1850,"mtime":1670204995291,"results":"39","hashOfConfig":"26"},{"size":9752,"mtime":1670224478032,"results":"40","hashOfConfig":"26"},{"size":489,"mtime":1669789785674,"results":"41","hashOfConfig":"26"},{"size":5190,"mtime":1670216264463,"results":"42","hashOfConfig":"26"},{"size":3629,"mtime":1670205048142,"results":"43","hashOfConfig":"26"},{"size":1532,"mtime":1669880552370,"results":"44","hashOfConfig":"26"},{"size":2395,"mtime":1670378221783,"results":"45","hashOfConfig":"26"},{"size":4414,"mtime":1669786394184,"results":"46","hashOfConfig":"26"},{"size":369,"mtime":1669692364023,"results":"47","hashOfConfig":"26"},{"size":368,"mtime":1669692419814,"results":"48","hashOfConfig":"26"},{"size":3597,"mtime":1670390178244,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"b7vz5i",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"53"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"53"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"53"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"53"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\index.js",[],[],[],"C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\App.js",["137"],[],"\r\nimport './App.css';\r\nimport { Routes, Route} from 'react-router-dom';\r\nimport Info from './Page/Info';\r\nimport Home from './Page/Home';\r\nimport Course from './Page/Course';\r\nimport Booking from './Page/Booking';\r\nimport Review from './Page/Review';\r\nimport Header from './Page/Header';\r\nimport Footer from './Page/Footer';\r\nimport Place from './Page/Place';\r\nimport Dogway from './Page/Dogway';\r\nimport School from './Page/School';\r\nimport Register from './Page/Register';\r\nimport Login from './Page/Login';\r\nimport Glogin from './Page/Glogin';\r\n\r\nimport './Database/firebase';\r\nimport User from './Page/User';\r\nimport Parents from './Page/Parents';\r\nimport Child from './Page/Btn';\r\nimport {firestore} from \"./Database/firebase\";\r\n\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      < Header />\r\n\r\n\r\n\r\n       <Routes> \r\n          \r\n          \r\n          <Route path='/glogin' element={<Glogin />}> </Route>\r\n          <Route path='/user' element={<User />}> </Route>\r\n\r\n          <Route path='/parents' element={<Parents />}> </Route>\r\n          <Route path='/child' element={<Child />} > </Route>\r\n          </Routes> \r\n\r\n      <Routes> \r\n          <Route path='/' element={<Home />}> </Route>\r\n          <Route path='/info' element={<Info />} > \r\n          <Route path='course' element={<Course />}/>\r\n          <Route path='place' element={<Place />} /> </Route>\r\n          <Route path='/course' element={<Course />} />\r\n          <Route path='/place' element={<Place />} />\r\n          <Route path='/booking' element={<Booking />}> </Route>\r\n          <Route path='/review' element={<Review />}> </Route>\r\n          <Route path='/dogway' element={<Dogway />}> </Route>\r\n          <Route path='/school' element={<School />}> </Route>\r\n          <Route path='/register' element={<Register />}> </Route>\r\n          <Route path='/login' element={<Login />}> </Route>\r\n      </Routes> \r\n\r\n    <Footer />\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\reportWebVitals.js",[],[],"C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Database\\firebase.js",["138"],[],"// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getFirestore } from \"firebase/firestore\"\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBThkzEWBOXS3OrpNp9xhq-zx4xxmscKT0\",\r\n  authDomain: \"dogpeople-88757.firebaseapp.com\",\r\n  projectId: \"dogpeople-88757\",\r\n  storageBucket: \"dogpeople-88757.appspot.com\",\r\n  messagingSenderId: \"562191870974\",\r\n  appId: \"1:562191870974:web:8e877dddc9d2808647aeaf\",\r\n  measurementId: \"G-D1DMQKNZ2P\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\n\r\nexport const db = getFirestore(app);//정보가 올바르면 아래 파이어스토어 접근","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Booking.jsx",["139","140","141","142","143","144","145"],[],"\r\nimport React from \"react\";\r\nimport \"./Css/Booking.css\";\r\nimport  { useState,  useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst Booking = () => {\r\n\r\n\r\n     const [show, setShow] = useState(false);\r\n \r\n     const handleClose = () => {\r\n      setShow(false);\r\n    }\r\n     const handleShow = () => {\r\n      setShow(true)\r\n    }\r\n     ;\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();  //새로고침 방지\r\n    \r\n    };\r\n\r\n    const onChange2 = (e) => {\r\n      setusername(e.target.value);\r\n    };\r\n\r\n    const inputusername = useRef(null);\r\n    const [username, setusername] = useState('');\r\n\r\n    const selectList =  // 사람선택 \r\n    [\"1\", \"2\", \"3\", \"4\", \"5\"];\r\n\r\n    const [Selected, setSelected] = useState(\"\");\r\n    const handleSelect = (e) => {\r\n      setSelected(e.target.value);\r\n    };\r\n\r\n\r\n    const [period, setPeriod] = useState(\"1\") // 강아지 선택 \r\n    const onPeriodChange = (e) => {\r\n        const {value} = e.target\r\n        setPeriod(value)}\r\n        const periodOptions = [\r\n          {value: \"1\", label:'1'},\r\n          {value: \"2\", label:'2'},\r\n          {value: \"3\", label:'3'},\r\n          {value: \"4\", label:'4'},\r\n          {value: \"5\", label:'5'},\r\n          {value: \"6\", label:'6'},\r\n      ]\r\n\r\n      const week = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n      const [tab, setTab] =\r\n      useState([false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);\r\n      const [only,setOnly] = useState(); // 선택한 id값\r\n      \r\n      function dates() {\r\n        let array2 = [];\r\n        for (let i = 0; i < 15; i++) {\r\n          const today = new Date();\r\n          today.setDate(today.getDate() + i);\r\n          const time = {\r\n            year: today.getFullYear(), //현재 년도\r\n            month: today.getMonth() + 1, // 현재 월\r\n            date: today.getDate(), // 현제 날짜\r\n          };\r\n          const dayOfWeek = week[today.getDay()];\r\n          const clickdate = `${time.year} / ${time.month} / ${time.date} / ${dayOfWeek} `;\r\n    \r\n          array2.push(\r\n            <div className=\"datebox\" style={{ display: \"inline-block\" }}  onClick={(e)=>{onClick3(e,i)}}>\r\n              <button  className={ `${only === i  ? 'active22' : ''}` } \r\n               value={clickdate} id=\"timecheck\" >\r\n                 <br></br>  \r\n                 {dayOfWeek} \r\n                  <br></br>\r\n                  {time.year}년\r\n                  <br></br>\r\n                  {time.month}월{time.date}일<br></br> <br></br>\r\n                </button>\r\n               </div>\r\n          );\r\n        }\r\n        return array2;\r\n      }\r\n\r\n      const [timecheck, settimecheck] = useState();\r\n      const onClick3 = (e,id) => {\r\n        console.log(e.currentTarget.firstChild);\r\n        settimecheck(e.currentTarget.firstChild.value);\r\n        setOnly(id);\r\n      };\r\n\r\n      const [onlys,setOnlys] = useState(); // 선택한 id값\r\n      const [shotcheck, settshotcheck] = useState(); // 값을 읽어옴 \r\n      \r\n      const onClicks = (e,id) => {\r\n        console.log(e.currentTarget.value);\r\n        settshotcheck(e.currentTarget.value);\r\n        setOnlys(id);\r\n      };\r\n\r\n\r\n\r\n\r\n      const [blist, setblist] = useState([]);\r\n        const [bookingid, setBookingid] = useState(0);\r\n    \r\n    const submituu = (e) => {\r\n        e.preventDefault(); //새로고침 방지\r\n        handleClose(); \r\n        const about_blist = blist.concat({ //원래 있는 리스트에 붙여주기\r\n          id: bookingid,\r\n        name: {username},\r\n        hum:  {Selected},\r\n        dog: {period},\r\n        date: {timecheck},\r\n        time: {shotcheck},\r\n\r\n        });\r\n       setBookingid(bookingid +20021); //id값 +1\r\n      \r\n        /*방금 붙여준 리스트까지 포함 된 리스트로 세팅하기*/\r\n        setblist(about_blist); \r\n      };\r\n      \r\n    \r\n    \r\n       const input_blist = blist.map((blist) => (\r\n      <div className=\"rgyPostIts-book\">\r\n   \r\n      <li>\r\n      <div className=\"rgyPostIt-booking\">\r\n       예약이 완료 되었습니다.  <br></br> <div className=\"rgyPostIt-texts\">\r\n       {username}님의 예약정보입니다.  예약번호 :  {bookingid} <br></br>\r\n       사람 {Selected}명, 강아지 {period}마리가  <br></br>\r\n       {timecheck},{shotcheck}에 예약 되었습니다. </div> </div>\r\n        </li>\r\n        </div>\r\n      ));\r\n    \r\n      const removebList = (id) => {\r\n        const about_blist = blist.filter((blist) => blist.id !== id);\r\n        setblist(about_blist);\r\n      };\r\n    \r\n\r\n\r\n    return ( <div className=\"booking-all\">       <br></br>\r\n        <div>\r\n      <span  className=\"sub-title\">Booking  예약하기</span> </div>\r\n     <br></br><br></br>\r\n\r\n\r\n     <form onSubmit={submit}>\r\n\r\n    <label> 닉네임 </label>\r\n    <input name = \"username\"  type=\"text\"  placeholder=\"이름&닉네임을 입력해주세요\"\r\n     value={username}\r\n     classname=\"textbosss\" onChange={onChange2} ref={inputusername} id=\"namebox\" \r\n         required />\r\n<br></br><br></br>\r\n\r\n     <div> <lable> 사람 </lable>\r\n        <select onChange={handleSelect} value={Selected} class=\"selected\"  required>\r\n          {selectList.map((item) => (\r\n            <option value={item} key={item}>\r\n              {item}\r\n            </option>\r\n          ))}\r\n        </select> 명, &nbsp;\r\n   \r\n            <label> 강아지  </label>\r\n              <select \r\n                value={period}\r\n                onChange={onPeriodChange}\r\n                class=\"selected\" required>\r\n                {\r\n                    periodOptions.slice(0, Selected).map(period => (\r\n                        <option value={period.value}>{period.label}</option>\r\n                    ))\r\n                }\r\n            </select>  마리 <br></br><br></br>\r\n            </div>\r\n\r\n            <div>\r\n       <div className='fbig'> <label> 날짜를 선택해주세요 </label> \r\n        <div className='title-date' > \r\n        <div className=\"datebox2\" required> {dates()} </div>    </div> </div><br></br> \r\n        <label> 시간을 선택해주세요 </label><br></br> \r\n        <button className={ `${onlys === 0  ? 'active3' : ''}` } onClick={(e)=>{onClicks(e,0)}} value={\"10:00- 12:00\"} id=\"shotcheck\"> <p> 10:00- 12:00 </p> </button>\r\n        <button className={ `${onlys === 1  ? 'active3' : ''}` } onClick={(e)=>{onClicks(e,1)}} value={\"12:00- 14:00\"} id=\"shotcheck\"> <p> 12:00- 14:00 </p> </button>\r\n  \r\n      </div>\r\n\r\n            <button type=\"submit\" className='ckeckreview2' onClick={handleShow} >예약하기</button>\r\n      </form> \r\n\r\n      <Modal className='modal-booking'\r\n     show={show} onHide={handleClose}>\r\n\r\n      {  username != \"\" && Selected != \"\" &&\r\n     period!=\"\"&&  timecheck!= null && shotcheck!= null ? \r\n\r\n        <div>\r\n        <Modal.Body> \r\n        <h2> 예약 정보를 확인해주세요  </h2> \r\n        <p>\r\n         {username} 님, 안녕하세요  <br></br>\r\n\r\n\r\n         사람 : {Selected}명과 강아지 : {period}마리가   <br></br>\r\n        {timecheck}, {shotcheck} 에 함께하는 <br></br> 시티투어에 \r\n       예약 하시겠습니까? </p>\r\n      \r\n       </Modal.Body>\r\n        <Modal.Footer>\r\n        <button onClick={submituu} className=\"modalbut\"> 예약 </button> \r\n        &nbsp;\r\n          <button onClick={handleClose} className=\"modalbut\"> 취소 </button>\r\n        </Modal.Footer> </div> : <Modal.Body > <div className= \"modalbody-1\">모든 정보를 입력해주세요 <br></br> 창을 클릭하면 사라집니다. </div> </Modal.Body> } \r\n      </Modal>  \r\n\r\n\r\n\r\n      <div className='bookinput'>\r\n      <ul>{input_blist}</ul> </div>\r\n\r\n\r\n\r\n    </div> );\r\n}\r\n \r\nexport default Booking;","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Info.jsx",["146"],[],"import \"./Css/Info.css\";\r\nimport phto from '../img/pht.png';\r\nimport bags from '../img/bags.gif';\r\nimport { Link, Outlet } from \"react-router-dom\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Info = () => {\r\n\r\n    \r\n   const navigate = useNavigate();\r\n\r\n   const gocos = () => {\r\n      navigate(\"/info/course\");\r\n    };\r\n  \r\n    const goplc = () => {\r\n      navigate(\"/info/place\");\r\n    };\r\n\r\n\r\n    return ( <div>\r\n<br></br><br></br>\r\n\r\n<div>\r\n    <span  className=\"sub-title\">Introduce \r\n     행사 안내 </span> </div>\r\n     <br></br><br></br>\r\n     \r\n<div className=\"infotit\"> \r\n\r\n    <h1> 우리의 가/족 입니다.</h1>\r\n<p>반려견(유기견)을 입양해 키우는 사람들을 위한</p>\r\n<p>특별한 여행 ‘너와 나의 특별한 동행’</p>\r\n</div>\r\n<img src={phto} alt={`phto`} className=\"phto\"/>\r\n<div> \r\n\r\n<div className=\"infotext\"> \r\n\r\n<div className=\"infotext-tit\"> \r\n<h2> 당신을 초대합니다. </h2>\r\n</div>\r\n\r\n\r\n<p>일자 : ~ 2022년 12월 31일까지</p>\r\n<p>장소 : 부산 시티투어 레드라인 특별코스 및 해운대</p>\r\n<p>대상 : 반려견(유기견)을 키우고 계신 반려인</p>\r\n<p>모집인원 : 시간당 20팀 (반려인 20명/반려견 20마리 ) </p>\r\n<p>신청방법 : 사이트를 통한 예약 </p>\r\n<p>신청마감 : 투어 24시간 이내</p>\r\n<p>참가비 : 무료</p>\r\n\r\n\r\n</div>\r\n\r\n<div className=\"info-foot\">\r\n<img src={bags} alt={`bags`} className=\"bags\"/>\r\n</div>\r\n<div className=\"info-footbox\"></div>\r\n<div> \r\n\r\n<button className=\"ckeckreview2\" onClick={gocos}>  코스로보기  </button>\r\n<button className=\"ckeckreview2\" onClick={goplc}>   장소로보기  </button>\r\n\r\n</div>\r\n<Outlet />\r\n\r\n\r\n\r\n<div className=\"info-footbox\"></div>\r\n</div>\r\n\r\n    </div> );\r\n}\r\n \r\nexport default Info;","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Course.jsx",["147","148","149","150","151","152"],[],"\r\nimport { useState } from \"react\";\r\nimport \"./Css/Course.css\";\r\nimport { MdFmdGood } from \"react-icons/md\"; \r\nimport \"./Css/Course.css\";\r\nimport * as React from 'react';\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineItem from '@mui/lab/TimelineItem';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@mui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\nimport FastfoodIcon from '@mui/icons-material/Fastfood';\r\nimport LaptopMacIcon from '@mui/icons-material/LaptopMac';\r\nimport HotelIcon from '@mui/icons-material/Hotel';\r\nimport RepeatIcon from '@mui/icons-material/Repeat';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport AddLocationAltIcon from '@mui/icons-material/AddLocationAlt';\r\n\r\n\r\nconst Course = () => {\r\n\r\n\r\n    return ( <div className=\"cos-ti\">\r\n   \r\n   <div><br></br><br></br><br></br><br></br>\r\n    <span  className=\"sub-title\">Course \r\n     코스 안내 </span> </div> <br /> <br />\r\n\r\n<div className=\"photobox\">\r\n     <div className=\"box\"></div>\r\n     <div className=\"box2\"></div>\r\n     <div className=\"box3\"></div>\r\n     <div className=\"box4\"></div> \r\n     </div>\r\n\r\n\r\n<div> <br />\r\n<Timeline position=\"alternate\"  className=\"timebox\" >\r\n\r\n      <TimelineItem style={{fontFamily: 'GmarketSansMedium' , backgroundColor:\"#DFDFDF\"}} >\r\n\r\n        <TimelineOppositeContent sx={{ m: 'auto 0' }}\r\n          variant=\"body2\" style={{fontFamily: 'GmarketSansMedium'}}>\r\n          부산역은 서울과 부산을 잇는 철도인 경부선의 종점이다.\r\n          기차뿐만 아니라 버스, 지하철, 택시 등을 이용할 수 있는\r\n          부산 교통의 중심지 역할을 한다. 총 3층 규모의 역으로\r\n          여행자들을 위한 편의시설까지 잘 갖추고 있다.\r\n        </TimelineOppositeContent>\r\n\r\n        <TimelineSeparator>\r\n          <TimelineDot>\r\n            <AddLocationAltIcon />\r\n          </TimelineDot>\r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n\r\n        <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n          <Typography variant=\"h6\" component=\"span\" style={{fontFamily: 'GmarketSansMedium'}}>\r\n            01 \r\n          </Typography>\r\n          <Typography style={{fontFamily: 'GmarketSansMedium'}}>부산역</Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n\r\n\r\n\r\n      <TimelineItem>\r\n        <TimelineOppositeContent\r\n          sx={{ m: 'auto 0' }}\r\n          variant=\"body2\" style={{fontFamily: 'GmarketSansMedium' }}>\r\n        부산항의 관문 오륙도, 태종대, 신선대, 용두산공원\r\n        등이 한눈에 바라볼 수 있는 부산항대교는 부산항 일대의\r\n        풍경을 바꾸어 놓은 부산항을 상징하는 대표 건축물로 우아한 곡선과\r\n        웅장한 외형은 수평선 넘어 떠오르는 일출과 조화를 이루는 새로운 명소입니다\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineConnector />\r\n          <TimelineDot>\r\n          <AddLocationAltIcon />\r\n          </TimelineDot>\r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n        <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n          <Typography variant=\"h6\" component=\"span\" style={{fontFamily: 'GmarketSansMedium' }}>\r\n            02\r\n          </Typography>\r\n          <Typography style={{fontFamily: 'GmarketSansMedium'}}>부산항</Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n\r\n\r\n\r\n\r\n      <TimelineItem style={{backgroundColor:\"#DFDFDF\"}}>\r\n      <TimelineOppositeContent\r\n          sx={{ m: 'auto 0' }}\r\n          variant=\"body2\"  style={{fontFamily: 'GmarketSansMedium'}}>\r\n                    광안리해수욕장 전면을 가로지르는 웅장한 규모와 함께 시간대별,\r\n        요일별, 계절별로 10만 가지 이상의 다양한 색상을 낼 수 있는\r\n        조명시설을 갖추어 탁월한 해상경관을 연출하고 있으며,\r\n        특히 여름 피서철 및 부산국제영화제 등 관광 특수기에는 국내외\r\n        많은 방문객들이 찾는 대표적인 관광명소입니다.\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineConnector />\r\n          <TimelineDot>\r\n          <AddLocationAltIcon />\r\n          </TimelineDot>\r\n          <TimelineConnector  />\r\n        </TimelineSeparator>\r\n        <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n          <Typography variant=\"h6\" component=\"span\" style={{fontFamily: 'GmarketSansMedium'}}>\r\n            03\r\n          </Typography>\r\n          <Typography style={{fontFamily: 'GmarketSansMedium'}}>광안리</Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n\r\n\r\n\r\n      <TimelineItem>\r\n      <TimelineOppositeContent\r\n          sx={{ m: 'auto 0' }}\r\n          variant=\"body2\"  style={{fontFamily: 'GmarketSansMedium'}}>\r\n        부산 해운대구에 위치한 해운대\r\n        해수욕장은 넓은 백사장과\r\n        아름다운 해안선을 자랑하고 있으며 얕은\r\n        수심과 잔잔한 물결로 해수욕장의 최적 조건을 갖추고 있다.\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineConnector />\r\n          <TimelineDot >\r\n          <AddLocationAltIcon />\r\n          </TimelineDot>\r\n  \r\n        </TimelineSeparator>\r\n        <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n          <Typography variant=\"h6\" component=\"span\" style={{fontFamily: 'GmarketSansMedium'}}>\r\n            04\r\n          </Typography>\r\n          <Typography style={{fontFamily: 'GmarketSansMedium'}}>해운대</Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n    </Timeline>\r\n\r\n</div>\r\n\r\n    <div className=\"footerspace\"></div>\r\n\r\n    </div> );\r\n}\r\n \r\nexport default Course;","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Place.jsx",[],[],"C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Header.jsx",[],[],"C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Review.jsx",["153","154","155"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { FaStar } from 'react-icons/fa'; \r\nimport \"./Css/Review.css\";\r\n\r\nconst ARRAY = [0, 1, 2, 3, 4];\r\n\r\nconst Review = () => {\r\n\r\n\r\n    const week = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n    const today = new Date();\r\n    today.setDate(today.getDate() );\r\n    const time = {\r\n      year: today.getFullYear(), //현재 년도\r\n      month: today.getMonth() + 1, // 현재 월\r\n      date: today.getDate(), // 현제 날짜\r\n    };\r\n    const dayOfWeek = week[today.getDay()];\r\n    const clickdate = `${time.year}. ${time.month}. ${time.date} (${dayOfWeek}) `;\r\n  \r\n  \r\n    const [note, setNote] = useState('');\r\n    const [username, setusername] = useState('');\r\n    const [lists, setLists] = useState([]);\r\n    const [nextId, setNextId] = useState(0);\r\n  \r\n    const inputusername = useRef(null);\r\n    const inputnote = useRef(null);\r\n  \r\n    \r\n  \r\n  /* input값에 문자 입력할 때 마다 실행 되는 이벤트 함수*/\r\n  const onChange = (e) => {\r\n    setNote(e.target.value);\r\n  };\r\n  const onChange2 = (e) => {\r\n    setusername(e.target.value);\r\n  };\r\n  \r\n  const submit = (e) => {\r\n    e.preventDefault();  //새로고침 방지\r\n    const about_lists = lists.concat({ //원래 있는 리스트에 붙여주기\r\n      id: nextId,\r\n      name: username,\r\n      text: note,\r\n      star: sendReview(),\r\n      date : today\r\n    });\r\n    setNextId(nextId + 1); //id값 +1\r\n  \r\n    /*방금 붙여준 리스트까지 포함 된 리스트로 세팅하기*/\r\n    setLists(about_lists); \r\n    setNote('');\r\n    setusername(''); //input 태그안에 있는 문자 지워주기\r\n  };\r\n  \r\n  /* 리스트들 화면에 띄우기 위해 map으로 반복 요소 불러오기 */\r\n  \r\n      \r\n  console.log(note);\r\n  console.log(username);\r\n  \r\n  \r\n  \r\n  \r\n  const [clicked, setClicked] = useState([false, false, false, false, false]);\r\n  \r\n  const handleStarClick = index => {\r\n    let clickStates = [...clicked];\r\n    for (let i = 0; i < 5; i++) {\r\n      clickStates[i] = i <= index ? true : false;\r\n    }\r\n    setClicked(clickStates);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    sendReview();\r\n  }, [clicked]); //컨디마 컨디업\r\n  \r\n  const sendReview = () => {\r\n    let score = clicked.filter(Boolean).length;\r\n     let reviewnote = \"\"; \r\n    switch (score) {\r\n        case 1 : \r\n        return reviewnote = \"1점 매우 나빠요 \"\r\n        case 2 : \r\n        return reviewnote = \"2점 나빠요\"\r\n        case 3 : \r\n        return reviewnote = \"3점 그냥그래요\"\r\n        case 4 : \r\n        return reviewnote = \"4점 좋아요\"\r\n        case 5 : \r\n        return reviewnote = \"5점 매우좋아요\"\r\n    }\r\n  };\r\n  \r\n  \r\n  const input_list = lists.map((list) => (\r\n    <div className=\"rgyPostIt\">\r\n     <div>  <button  onClick={() => removeList(list.id)}  > X </button> </div>\r\n    <li key={list.id} ><div className=\"rgyPostIt-id\"> 글번호 : {list.id}  |  작성자 : {list.name} <br></br> \r\n    작성일: {clickdate}  </div>\r\n    <div className=\"rgyPostIt-star\">{list.star} </div>\r\n    <div  className=\"rgyPostIt-text\">{list.text}</div>\r\n \r\n    </li>\r\n    </div>\r\n  ));\r\n  \r\n  //삭제 이벤트 함수\r\n  const removeList = (id) => {\r\n    const about_lists = lists.filter((list) => list.id !== id);\r\n    setLists(about_lists);\r\n  };\r\n  \r\n\r\n    return ( <div className=\"review\">\r\n <br></br><br></br> <br></br><br></br>\r\n        <div>\r\n      <span  className=\"sub-title\">Review \r\n     리뷰남기기 </span> </div>\r\n     <br></br><br></br>\r\n     <br></br><br></br>\r\n    \r\n     <div className='reviewbig'>\r\n\r\n<form onSubmit={submit}>\r\n    <label> 닉네임 </label>\r\n    <input name = \"username\"  type=\"text\"  placeholder=\"이름&닉네임을 입력해주세요\"\r\n     value={username}\r\n     classname=\"textbosss\" onChange={onChange2} ref={inputusername} id=\"namebox\" \r\n         required />\r\n<br></br>\r\n\r\n<div className='Wrap'>\r\n\r\n      <div className='Stars'>\r\n        {ARRAY.map((el, idx) => {\r\n          return (\r\n            <FaStar\r\n              key={idx}\r\n              size=\"50\"\r\n              onClick={() => handleStarClick(el)}\r\n              className={clicked[el] && 'yellowStar'}\r\n            />\r\n          );\r\n        })}    <div className='RatingText'> <p> {sendReview() }</p>  </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n<label>리뷰</label> <br></br>\r\n         <input name=\"list\"   type=\"text\"  placeholder=\"내용을 작성해주세요.\"\r\n          value={note}  onChange={onChange}  ref={inputnote} id=\"textbox\"\r\n           className='name_box' style={{ height: \"100px\"}} required />\r\n    <br></br> <br></br>\r\n        <button type=\"submit\" className='ckeckreview'>작성</button>\r\n      </form>\r\n\r\n\r\n\r\n  <div className='inputlistun'>\r\n      <ul>{input_list}</ul> </div>\r\n\r\n\r\n     </div> \r\n    </div> );\r\n}\r\n\r\nexport default Review;","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Dogway.jsx",["156"],[],"import \"./Css/dogway.css\";\r\n\r\nconst Dogway = () => {\r\n    return ( <div className=\"dogwaybig\">\r\n\r\n\r\n<h1> 내 사랑 반려동물과 행복하게 함께 사는 법 </h1>\r\n<p>반려견을 사랑하는 보호자라면 당연히 자신의 강아지를 행복하게 해주는 법에 관심이 많을 것입니다. 반려견을 행복하게 해 주기 위해서는 강아지의 본성에 대한 이해가 우선해야 합니다. 여러분의 애완견을 행복하게 만들어 줄 수 있는 작은 방법들을 알아보겠습니다.</p>\r\n<br></br>\r\n\r\n<img src=\"https://mediahub.seoul.go.kr/uploads/mediahub/2021/10/PaeYuUyCfkeVyhYgslOxfDymjGOKHRqj.png\"></img>\r\n\r\n\r\n<div>\r\n<h2>1. 강아지와 많이 놀아주기</h2> \r\n실내에서든지 밖에서든지 강아지와 놀 수 있는 시간을 정해두고 놀아주는 것이 좋습니다. 개들이 가장 좋아하는 놀이 중에 하나가 물건 물어오기입니다. 공놀이나 줄 당기기 놀이와 같은 주인과 함께하는 놀이라면 어떤 놀이라도 반려견은 행복해할 것입니다. 반려견은 놀이 시간에 뇌를 자극하는 여러 가지 경험을 할 수 있습니다. 여건이 허락하는 한 많은 시간을 자신의 반려견과 보내는 것이 강아지에게 일상적인 행복감을 선사하는 방법입니다.\r\n</div>\r\n\r\n<div>\r\n<h2>2. 사랑을 표현하기 </h2> \r\n이것은 사람에게도 똑같이 적용되는 이야기 입니다만, 반려견은 자신의 응석을 받아주는 것을 좋아합니다. 강아지를 부드럽게 터치해주고 애정이 담긴 말을 해주세요. 이런 방식으로 여러분의 사랑을 표현하는 것입니다.  또한 좋은 행동을 하면 머리를 쓰다듬어주고 좋아하는 간식으로 보상해주세요. 이런 종류의 긍정적인 보상이 반려견 훈련의 좋은 방법입니다. 이 같은 과정에서 애완견들이 행복을 느끼게 된다는 사실을 기억해야 합니다</div>\r\n\r\n<div>\r\n<h2>3. 장난감 선물하기\r\n</h2> \r\n강아지들도 인간처럼 선물을 받으면 좋아합니다. 집안에서 쓸모없이 굴러 다니는 물건을 손봐서 장난감을 만들어 보세요. 이런 주인이 직접 만든 선물을 강아지에게 주는 것도 신선한 자극이 된다고 합니다. 한쪽만 남은 장갑이나 양말 등도 좋은 장난감 선물이 될 수 있습니다. 바쁜 생활 등의 이유로 직접 장난감을 만들어 주기 힘들다면 시중에 나와있는 장난감을 선물해도 좋습니다.</div>\r\n\r\n<div>\r\n<h2>4. 산책하기\r\n</h2> \r\n강아지들이 가장 좋아하는 활동이 바로 산책이라고 합니다. 간식을 먹는 것을 좋아하지만 이것보다 훨씬 더 선호하는 강아지들의 스트레스 해소법이 보호자와 함께하는 산책입니다. 산책을 할 때에는 지나친 통제보다는 주변의 자연환경을 보고 느끼고 냄새 맡고 원하는 곳으로 자유롭게 가도록 하는 것이 좋습니다. 물론 개를 풀어놓으라는 것은 아니며, 주인과 함께 해야 합니다.\r\n</div>\r\n\r\n<div>\r\n<h2>5. 집에 왔을 때 반갑게 인사 나누기\r\n</h2> \r\n외출하고 돌아오거나 퇴근하고 집에 와서 반려견에게 반갑게 인사해 주세요. 1인 가구주 등의 반려인이 기르는 개는 하루 종일 혼자서 빈집에서 주인이 돌아오기를 애타게 기다리는 경우가 많습니다. 반갑게 꼬리를 흔들며 다가오는 반려견에게 따듯한 말과 행동으로 인사해 주는 것이 좋습니다. 이렇게 해주면 강아지도 주인이 자기를 보고 싶고 그리워했구나 하고 느낀다고 합니다.</div>\r\n\r\n<div>\r\n<h2>6.애완견을 사람처럼 다루지 않기\r\n</h2> \r\n개를 비롯한 반려동물을 사람처럼 대우하는 것이 그들을 행복하게 만드는 것은 아닙니다. 반려견에게 가능한 최고의 삶을 제공해 주려는 욕심으로 개를 사람처럼 대하면 안 됩니다. 반려견을 사람처럼 취급하면 그들의 건강과 행동에 많은 문제를 일으 킬 수 있습니다. 사람이 먹는 약이나 음식을 준다든지, 불필요한 미용치료를 하는 것, 과도한 옷이나 액세서리를 착용시키는 것 등은 자제해야 합니다. 심지어 애완견에게 화장을 시키는 경우도 있는데 해서는 안 되는 행위입니다.</div>\r\n\r\n<div>\r\n<h2>7. 반려견의 본성 존중하기\r\n</h2> \r\n반려견을 행복하게 만드는 방법 중에 최고는 그대로 자유롭게 내버려 두는 것입니다. 우리들 애견인이 보기에는 화나고 짜증 나는 행동들도 너무 과하지 않은 범위에서는 개라는 동물의 자연스러운 본능임을 인정해야 합니다. 약간 불결한 진흙탕이나 흙먼지 속에서 뛰어놀도록 하세요. 민감한 후각으로 청결하지 못한 주변의 쓰레기 더미나 땅바닥 냄새 맡기, 다른 개체의 배설물 냄새 맡기 등의 행동을 그대로 두세요. 다른 반려견들은 물론이고 다른 종의 개체와도 어울리고 사귀게 해줘야 합니다. 우리 사람의 판단기준으로 개의 행동을 비난하고 꾸짖기보다는 개의 본능적인 행동을 인정하고 내버려 두는 것이 반려견을 행복하게 해주는 방법이라는 사실을 인식해야 합니다. 반려견의 동물로서의 본능을 존중하는 것이 그들을 행복하게 해주는 지름길입니다. </div>\r\n\r\n<br></br><br></br><br></br><br></br>\r\n\r\n    </div> );\r\n}\r\n \r\nexport default Dogway;","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\School.jsx",["157","158"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport \"./Css/dogway.css\";\r\n\r\nconst School = () => {\r\n\r\nconst uid = Math.random().toString(36).substring(2, 12);\r\n     \r\n\r\n    return ( <div className=\"schoolbig\">\r\n<br></br><br></br>\r\n<h1> 부산시반려동물복지문화센터 </h1>\r\n<img src=\"https://modo-phinf.pstatic.net/20171014_263/1507908281192HGPtH_JPEG/mosaAe7tjA.jpeg?type=f530_353\"></img>\r\n<br></br>\r\n<p> \"사람과 동물이 함께 행복한 동물사랑 선진도시 부산\"을 만들겠다는 부산광역시 비전에 따른 「부산광역시 제1호 반려동물 복지·문화센터」입니다. 2개층 200㎡규모의 반려견·반려묘 입양센터로 예방접종부터 행동교정, 미용, 상담 등 세심한 입양절차로 안락사 위기에 처한 유기동물들을 새로운 가족 품으로 인도합니다.</p>\r\n\r\n<br></br>\r\n<button type=\"submit\" className='ckeckreview2' onClick={() => window.open('https://busanani.modoo.at/', '_blank')} >  바로가기 </button>\r\n\r\n{uid}\r\n   \r\n<br></br><br></br>\r\n    </div> );\r\n}\r\n \r\nexport default School;","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Footer.jsx",[],[],"C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Glogin.jsx",["159","160","161","162","163","164","165","166","167","168"],[],"import { collection, query, where, getDocs, orderBy} from \"firebase/firestore\"\r\nimport { Firestore, getFirestore } from 'firebase/firestore/lite';\r\nimport { useEffect } from \"react\";\r\nimport {db} from '../Database/firebase'\r\nimport { doc, setDoc ,updateDoc, arrayUnion, arrayRemove ,addDoc   } from \"firebase/firestore\"; \r\nimport { useState } from \"react\";\r\n\r\n\r\nlet i = 1;\r\nconst Glogin = () => {\r\n\r\n    // 데이터 읽어오기 \r\n   const  getUserData  = async() => {\r\n    let array = [];\r\n    try {\r\n      const q = query(collection(db, \"Register\"), ); //where(\"Uerid\", \"==\", 14 )\r\n      const querySnapshot = await getDocs(q);\r\n     \r\n      querySnapshot.forEach((doc) => {\r\n        console.log(`${doc.id} => ${doc.data().Uerid}`);\r\n        console.log(`${doc.id} => ${doc.data().email}`);\r\n        console.log(`${doc.id} => ${doc.data().nickname}`);\r\n        console.log(`${doc.id} => ${doc.data().password}`);\r\n        console.log(`${doc.id} => ${doc.data().phone}`);\r\n        array.push(doc.data());\r\n\r\n        setidValue(doc.data().Uerid);\r\n      });\r\n    } catch (e) {\r\n      console.log(\"오류\", e);\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    ()=>{getUserData()}\r\n  );\r\n\r\nconst [idValue, setidValue] = useState();\r\n// 데이터 추가하기 \r\n\r\n\r\n  \r\n  const  addUserData  = async() => { i++;\r\nawait addDoc(collection(db, \"Register\"),{\r\n\r\n   Uerid : idValue +1,\r\n    email: \"yㄹㄴㅇㄹ\",\r\n    nickname: \"키ㅇㄴㅁㄹ미\",\r\n    password: \"USㅁㄴㅇㄻ렁ㄴㅁA\",\r\n    phone: \"23ㅇㅁㄴㄹㄴㄹ2450\" \r\n\r\n}); }\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>홈입니다</h1>\r\n\r\n      <button onClick={getUserData} > 가입하기 </button>\r\n      <button onClick={addUserData} > addUserData 가입하기 </button>\r\n\r\n \r\n\r\n  <div className=\"App\">\r\n      firebase 확인해보기!\r\n    </div>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Glogin;","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Register.jsx",["169","170","171","172"],[],"import React, { useEffect, useState } from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Input from \"@mui/material/Input\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport { db } from \"../Database/firebase\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [phone, setphone] = useState(\"\");\r\n\r\n  const [error, setError] = useState({\r\n    phoneError: false,\r\n    passwordError: false,\r\n    ConfirmPasswordError: false,\r\n    userNameError: false,\r\n    emailError: false,\r\n  });\r\n\r\n  const [values, setValues] = useState({\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n\r\n  const onChangephone = (e) => {\r\n    const phoneRegex = /^[0-9\\b -]{0,13}$/;\r\n    console.log(e.target.value.length);\r\n    // 문자 길이로 확인하여 그전에도 알림뜨기\r\n    if (e.target.value.length !== 13) {\r\n      setError({ ...error, phoneError: true });  }\r\n      else setError({ ...error, phoneError: false });\r\n\r\n    // 값이 없거나 혹은 입력한 값이 있을때 맞다 - 문자만 필터\r\n    if (!e.target.value || phoneRegex.test(e.target.value)) {\r\n      setphone(e.target.value);\r\n    } else {\r\n      setError({ ...error, phoneError: true });\r\n      \r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (phone.length === 10) {\r\n      setphone(phone.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\"));\r\n    }\r\n    if (phone.length === 13) {\r\n      setphone(\r\n        phone.replace(/-/g, \"\").replace(/(\\d{3})(\\d{4})(\\d{4})/, \"$1-$2-$3\")\r\n      );\r\n    }\r\n  }, [phone]);\r\n\r\n  const onChangePassword = (e) => {\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\r\n    console.log(e.target.value)\r\n    if (!e.target.value || passwordRegex.test(e.target.value))\r\n      setError({ ...error, passwordError: false });\r\n    else {  console.log(\"error\")\r\n      setError({ ...error, passwordError: true });  }\r\n    setPassword(e.target.value);\r\n  };\r\n  const onChangeConfirmPassword = (e) => {\r\n    if (password === e.target.value)\r\n      setError({ ...error, ConfirmPasswordError: false });\r\n    else {\r\n      setError({ ...error, ConfirmPasswordError: true });\r\n    }\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n  const onChangeUserName = (e) => {\r\n    setError({ ...error, userNameError: false });\r\n    setUserName(e.target.value);\r\n  };\r\n  const onChangeEmail = (e) => {\r\n    const emailRegex =\r\n      /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n    if (!e.target.value || emailRegex.test(e.target.value))\r\n      setError({ ...error, emailError: false });\r\n    else {\r\n      setError({ ...error, emailError: true });\r\n    }\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  // 비밀번호 아이콘 작동\r\n  const handleClickShowPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleClickShowconfirmPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showconfirmPassword: !values.showconfirmPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownconfirmPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  // 서버에 데이터 추가\r\n\r\n  const [lists, setLists] = useState([]);\r\n  const [nextId, setNextId] = useState(0);\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault(); //새로고침 방지\r\n    const about_lists = lists.concat({\r\n      //원래 있는 리스트에 붙여주기\r\n      id: nextId,\r\n      email: email,\r\n      username: username,\r\n      password: password,\r\n      phone: phone,\r\n    });\r\n    setNextId(nextId + 1); //id값 +\r\n    setLists(about_lists);\r\n\r\n  };\r\n\r\n  const uid = Math.random().toString(36).substring(2, 12);\r\n  const addUserData2 = async () => {\r\n    await setDoc(doc(db, \"Register\", email), {\r\n      Uerid: {uid},\r\n      email: email,\r\n      username: username,\r\n      password: password,\r\n      phone: phone,\r\n      timestamp: new Date().toLocaleDateString()\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <br />    <br />    <br /> \r\n\r\n      <h1> 가입하기 </h1>\r\n      <div> 서비스 이용을 위해 필요한 필수 정보를 입력해주세요 </div> <br></br>\r\n      <br></br>\r\n      <form onSubmit={submit}>\r\n        <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"standard\">\r\n          <InputLabel htmlFor=\"standard-email\">email</InputLabel>\r\n          <Input\r\n            id=\"standard-email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email Address\"\r\n            value={email}\r\n            onInput={onChangeEmail}\r\n          />\r\n\r\n          {error.emailError && (\r\n            <div\r\n              className=\"invalid-input\"\r\n              style={{ fontSize: \"11px\", color: \"#D73E3E\" }}\r\n            >\r\n              이메일 주소를 확인해주세요.{\" \"}\r\n            </div>\r\n          )}\r\n        </FormControl>{\" \"}\r\n        <br></br>\r\n        <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"standard\">\r\n          <InputLabel htmlFor=\"standard-password\">Password</InputLabel>\r\n          <Input\r\n            type={values.showPassword ? \"text\" : \"password\"}\r\n            id=\"standard-Password\"\r\n            name=\"password\"\r\n            maxLength={20}\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={onChangePassword}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n\r\n          {error.passwordError && (\r\n            <div\r\n              className=\"invalid-input\"\r\n              style={{ fontSize: \"11px\", color: \"#D73E3E\" }}\r\n            >\r\n              비밀번호는 8자리 이상, 영문+숫자로 입력해주세요{\" \"}\r\n            </div>\r\n          )}\r\n        </FormControl>{\" \"}\r\n        <br></br>\r\n        <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"standard\">\r\n          <InputLabel htmlFor=\"standard-password\">Password Confirm</InputLabel>\r\n          <Input\r\n            id=\"standard-Password\"\r\n            type={values.showconfirmPassword ? \"text\" : \"password\"}\r\n            maxLength={20}\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onInput={onChangeConfirmPassword}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowconfirmPassword}\r\n                  onMouseDown={handleMouseDownconfirmPassword}\r\n                >\r\n                  {values.showconfirmPassword ? (\r\n                    <VisibilityOff />\r\n                  ) : (\r\n                    <Visibility />\r\n                  )}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          {error.ConfirmPasswordError && (\r\n            <div\r\n              className=\"invalid-input\"\r\n              style={{ fontSize: \"11px\", color: \"#D73E3E\" }}\r\n            >\r\n              비밀번호와 다릅니다.\r\n            </div>\r\n          )}\r\n        </FormControl>{\" \"}\r\n        <br></br>\r\n        <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"standard\">\r\n          <InputLabel htmlFor=\"standard-name\">이름/닉네임</InputLabel>\r\n          <Input\r\n            id=\"standard-name\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"username\"\r\n            value={username}\r\n            onInput={onChangeUserName}\r\n          />\r\n          {error.userNameError && (\r\n            <div\r\n              class=\"invalid-input\"\r\n              style={{ fontSize: \"11px\", color: \"#D73E3E\" }}\r\n            >\r\n              닉네임/이름을 입력해주세요\r\n            </div>\r\n          )}\r\n        </FormControl>{\" \"}\r\n        <br></br>\r\n        <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"standard\">\r\n          <InputLabel htmlFor=\"standard-phone\">phone</InputLabel>\r\n          <Input\r\n            id=\"standard-phone\"\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            placeholder=\"phone\"\r\n            value={phone}\r\n            onInput={onChangephone}\r\n          />\r\n          {error.phoneError && (\r\n            <div\r\n              class=\"invalid-input\"\r\n              style={{ fontSize: \"11px\", color: \"#D73E3E\" }}\r\n            >\r\n              정확한 폰 번호를 입력해주세요\r\n            </div>\r\n          )}\r\n        </FormControl>{\" \"}\r\n        <br></br>\r\n        <br></br>\r\n        <button type=\"submit\" onClick={addUserData2}\r\n        disabled={!(!null&&!error.emailError && !error.phoneError && !error.passwordError\r\n          && !error.ConfirmPasswordError && !error.userNameError  )}\r\n        >가입</button>\r\n        <br></br>{\" \"}\r\n      </form>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\User.jsx",["173"],[],"import { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst User = () => {\r\n    const location = useLocation();\r\n    const user = location.state.user;\r\n    return ( <div>\r\n        <button> <Link to=\"/\"> home</Link> </button>\r\n        <p> 로그인 완료!!!!!! </p>\r\n        <p> {location.state.name}</p>\r\n        <p> {location.state.email}</p>\r\n        <p><button></button></p>\r\n        <p> <img src={location.state.photoURL} alt=\"\" /> </p>\r\n\r\n    </div> );\r\n}\r\n \r\nexport default User;","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Login.jsx",["174","175","176","177","178","179"],[],"import * as React from 'react';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Input from '@mui/material/Input';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { Button } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport GoogleIcon from '@mui/icons-material/Google';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n    \r\n    const [values, setValues] = useState({\r\n        password: '',\r\n        showPassword: false,\r\n      });\r\n\r\n      const [email,setEmail] = useState();\r\n      const [emailError, setEmailError] = useState(false);\r\n\r\n  const onChangeEmail = (e) => {\r\n    const emailRegex = /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n    if (!e.target.value || emailRegex.test(e.target.value)) setEmailError(false);\r\n    else setEmailError(true);\r\n    setEmail(e.target.value);\r\n};\r\n\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  // 비밀번호 아이콘 작동 \r\n  const handleClickShowPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const navigater = useNavigate();\r\n\r\n  // 구글로 로그인하기 버튼을 눌렀을때 파이어스토어를 들고와서 사용\r\n  const googleLogin = () => {\r\n    console.log(\"로그인?\")\r\n    const provider = new GoogleAuthProvider();\r\n    provider.addScope(\"profile\");\r\n    provider.addScope(\"email\");\r\n\r\n\r\n    const auth = getAuth();\r\n    signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        // 로그인된 결과를 구글인증을 통해서 확인 > 토큰 발급\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        const token = credential.accessToken;\r\n        // 로그인된 결과 중에서 user를 통해서 관련 정보를 가져올수 있다\r\n        const user = result.user;\r\n        console.log(user) \r\n        console.log(user.displayName) \r\n        console.log(user.photoURL) \r\n        navigater('/user',{state:{\r\n            name : user.displayName,\r\n            email : user.email,\r\n            photo : user.photoURL\r\n        }});\r\n      })\r\n      .catch((error) => {\r\n        // \r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // \r\n        const email = error.customData.email;\r\n        // \r\n        const credential = GoogleAuthProvider.credentialFromError(error);\r\n        console.log(errorMessage);\r\n      });\r\n  };\r\n\r\n\r\n\r\n    return ( \r\n    <div> <br /><br />\r\n        <div>\r\n\r\n\r\n    <div className=\"login\">\r\n     <h1>로그인</h1>\r\n    <div> 서비스 시작을 위해 로그인을 해주세요 </div>\r\n<form> \r\n\r\n\r\n        <FormControl sx={{ m: 1, width: '25ch' }} variant=\"standard\">\r\n          <InputLabel htmlFor=\"standard-email\">email</InputLabel>\r\n          <Input\r\n            id=\"standard-email\"\r\n            type=\"email\"\r\n            placeholder=\"Email Address\" \r\n            value={email}\r\n            onChange={onChangeEmail}/>\r\n\r\n             {emailError && <div className=\"invalid-input\" style={{fontSize:'11px', color:\"#D73E3E\"}} >\r\n            이메일 주소를 확인해주세요. </div>}\r\n        </FormControl> <br></br>\r\n\r\n  <br></br>\r\n          <FormControl sx={{ m: 1, width: '25ch' }} variant=\"standard\">\r\n          <InputLabel htmlFor=\"standard-password\">Password</InputLabel>\r\n          <Input\r\n            id=\"standard-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n  <br></br>\r\n  <div>\r\n  <span> 아이디찾기 </span> /\r\n  <span> 비밀번호 찾기 </span>  <br></br>\r\n  </div>  <br></br>\r\n\r\n  <Button>로그인</Button><br></br>\r\n<span  style={{fontSize:'12px', margin:\"7px\"}}> or </span><br></br>\r\n<button onClick={googleLogin} > <GoogleIcon />  계정으로 계속하기</button><br></br>\r\n\r\n\r\n<div> 계정이 없으시다면 <span><Link to=\"/register\" className='text0' style={{fontWeight: \"bold\"}} >회원가입</Link></span>을 해주세요 </div>\r\n</form>\r\n\r\n</div>\r\n  </div>\r\n        <br /><br /><br /><br />\r\n    </div> \r\n    );\r\n}\r\n \r\nexport default Login;\r\n","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Parents.jsx",[],[],"C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Btn.jsx",["180"],[],"\r\nimport { Phone } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst Btn = () => {\r\n\r\n\tconst [email, password,userName,phone] = useState(\"\");\r\n\r\n\tconst [list, setlist] = useState({\r\n        email: '',\r\n        password: '',\r\n        userName: '',\r\n\t\tphone:''\r\n    })\r\n\r\n\tconst onChangeInput = (e) => {\r\n        const {id, value} = e.target // destructuring\r\n        setlist({\r\n            ...list,\r\n            [id]:value\r\n        })\r\n    }\r\n\r\n\r\n\treturn (\r\n    \t\t<div> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />\r\n\r\n          <input\r\n            id=\"standard-email\"\r\n            type=\"email\"\r\n            placeholder=\"Email Address\" name=\"email\" value={email} onChange={onChangeInput}\r\n\t\t\t  />   <br /> <br />\r\n\r\n\t\t\t<input\r\n            id=\"standard-Pw\"\r\n            type=\"password\"\r\n            placeholder=\"password\" value={password} onChange={onChangeInput}\r\n\t\t\t />    <br /> <br />\r\n\r\n\t\t\t<input\r\n            id=\"standard-name\"\r\n            type=\"text\"\r\n            placeholder=\"userName\" value={userName} onChange={onChangeInput}\r\n\t\t\t  />    <br /> <br /> \r\n\t\t\t<input\r\n            id=\"standard-phone\"\r\n            type=\"text\"\r\n            placeholder=\"phone2\" value={phone}  onChange={onChangeInput}\r\n\t\t\t  />    <br /> <br />\r\n\r\n\r\n\r\n\t\t\t<button> 회원가입 </button>\r\n\r\n\t\t\t{email}  {password}  {userName} {phone}\r\n\r\n\r\n\r\n<br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />\r\n       \t \t</div>\r\n\t);\r\n};\r\n\r\nexport default Btn;","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Page\\Home.jsx",["181"],[],"\r\n\r\nimport \"./Css/Home.css\";\r\nimport loading from '../img/main1.png';\r\nimport backing from '../img/newido.png';\r\nimport page2bac from '../img/main_s1.png';\r\nimport page3bac from '../img/main_s2.png';\r\nimport Mainphotos from \"../Componment/Mainphotos\";\r\nimport Logo from \"../Componment/Logo\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n   const navigate = useNavigate();\r\n\r\n   const godogway = () => {\r\n      navigate(\"/dogway\");\r\n    };\r\n  \r\n    const doschool = () => {\r\n      navigate(\"/school\");\r\n    };\r\n\r\n    return (<div className=\"mainebig\">\r\n         <img src={backing} alt={`loading2`} className=\"backing\"/>\r\n\r\n        <div className=\"maintitle\">\r\n           <p><h1><b> 너와 나의 특별한 동행</b> </h1></p>\r\n           <p> 2022년 반려견과 함께하는 부산 시티투어버스  </p>\r\n           <p> 유기견의 아픔을 잊고, 주인과 행복한 추억 만들기  </p>\r\n        </div>\r\n    \r\n        <div className=\"mainimgdog\">\r\n        <img src={loading} alt={`loading2`} className=\"dogphoto\"/>\r\n        </div> \r\n\r\n\r\n\r\n        <div className=\"main2page\">\r\n        <img src={page2bac} alt={`page2`} className=\"page2bac\"/>\r\n        <div className=\"main2page-text\">\r\n         <p>반려견과 행복하기 위한</p>\r\n        <p><h2><b>  7가지 방법 </b> </h2></p>\r\n           <p> 수의사가 알려주는 교감 방법  </p>\r\n           <p> 개별 포토 타임 진행   </p>\r\n           <div> \r\n           <button type=\"submit\" className='ckeckreview2' onClick={godogway} >  상세보기</button>\r\n           </div>\r\n           </div>\r\n          \r\n        </div>\r\n\r\n        <div className=\"main25page\">\r\n\r\n        </div> \r\n\r\n        <div className=\"main3page\">\r\n        <img src={page3bac} alt={`page3`} className=\"page3bac\"/>\r\n        <div className=\"main3page-text\">\r\n         <p>반려동물시민학교</p>\r\n        <p><h1><b> 우리 학교가자  </b> </h1></p>\r\n           <p> 이웃갈등을 예방하고 </p><p> 행복한 생활을 위하여 </p>\r\n           <p> 사회화ㆍ예절교육, 행동교정교육 </p>\r\n           <div>  <button type=\"submit\" className='ckeckreview2' onClick={doschool}  >상세보기</button> </div>\r\n           </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"main4page\">\r\n        <Mainphotos className=\"main4page2\"/>\r\n        </div>\r\n\r\n       \r\n    </div>  );\r\n}\r\n \r\nexport default Home;","C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Componment\\Side.jsx",[],[],"C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Componment\\Logo2.jsx",[],[],"C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Componment\\Logo.jsx",[],[],"C:\\Users\\GGG\\Documents\\GitHub\\dogpeople\\src\\Componment\\Mainphotos.jsx",["182","183"],[],{"ruleId":"184","severity":1,"message":"185","line":22,"column":9,"nodeType":"186","messageId":"187","endLine":22,"endColumn":18},{"ruleId":"184","severity":1,"message":"188","line":23,"column":7,"nodeType":"186","messageId":"187","endLine":23,"endColumn":16},{"ruleId":"184","severity":1,"message":"189","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":14},{"ruleId":"184","severity":1,"message":"190","line":56,"column":14,"nodeType":"186","messageId":"187","endLine":56,"endColumn":17},{"ruleId":"184","severity":1,"message":"191","line":56,"column":19,"nodeType":"186","messageId":"187","endLine":56,"endColumn":25},{"ruleId":"184","severity":1,"message":"192","line":145,"column":13,"nodeType":"186","messageId":"187","endLine":145,"endColumn":24},{"ruleId":"193","severity":1,"message":"194","line":205,"column":19,"nodeType":"195","messageId":"196","endLine":205,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":205,"column":37,"nodeType":"195","messageId":"196","endLine":205,"endColumn":39},{"ruleId":"193","severity":1,"message":"194","line":206,"column":12,"nodeType":"195","messageId":"196","endLine":206,"endColumn":14},{"ruleId":"184","severity":1,"message":"197","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":14},{"ruleId":"184","severity":1,"message":"198","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":18},{"ruleId":"184","severity":1,"message":"199","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":19},{"ruleId":"184","severity":1,"message":"200","line":14,"column":8,"nodeType":"186","messageId":"187","endLine":14,"endColumn":20},{"ruleId":"184","severity":1,"message":"201","line":15,"column":8,"nodeType":"186","messageId":"187","endLine":15,"endColumn":21},{"ruleId":"184","severity":1,"message":"202","line":16,"column":8,"nodeType":"186","messageId":"187","endLine":16,"endColumn":17},{"ruleId":"184","severity":1,"message":"203","line":17,"column":8,"nodeType":"186","messageId":"187","endLine":17,"endColumn":18},{"ruleId":"204","severity":1,"message":"205","line":78,"column":6,"nodeType":"206","endLine":78,"endColumn":15,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":83,"column":5,"nodeType":"210","messageId":"211","endLine":94,"endColumn":6},{"ruleId":"184","severity":1,"message":"212","line":93,"column":16,"nodeType":"186","messageId":"187","endLine":93,"endColumn":26},{"ruleId":"213","severity":1,"message":"214","line":11,"column":1,"nodeType":"215","endLine":11,"endColumn":103},{"ruleId":"184","severity":1,"message":"216","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":21},{"ruleId":"213","severity":1,"message":"214","line":12,"column":1,"nodeType":"215","endLine":12,"endColumn":110},{"ruleId":"184","severity":1,"message":"217","line":1,"column":29,"nodeType":"186","messageId":"187","endLine":1,"endColumn":34},{"ruleId":"184","severity":1,"message":"218","line":1,"column":45,"nodeType":"186","messageId":"187","endLine":1,"endColumn":52},{"ruleId":"184","severity":1,"message":"219","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":19},{"ruleId":"184","severity":1,"message":"220","line":2,"column":21,"nodeType":"186","messageId":"187","endLine":2,"endColumn":33},{"ruleId":"184","severity":1,"message":"221","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":13},{"ruleId":"184","severity":1,"message":"222","line":5,"column":15,"nodeType":"186","messageId":"187","endLine":5,"endColumn":21},{"ruleId":"184","severity":1,"message":"223","line":5,"column":23,"nodeType":"186","messageId":"187","endLine":5,"endColumn":32},{"ruleId":"184","severity":1,"message":"224","line":5,"column":34,"nodeType":"186","messageId":"187","endLine":5,"endColumn":44},{"ruleId":"184","severity":1,"message":"225","line":5,"column":46,"nodeType":"186","messageId":"187","endLine":5,"endColumn":57},{"ruleId":"184","severity":1,"message":"226","line":9,"column":5,"nodeType":"186","messageId":"187","endLine":9,"endColumn":6},{"ruleId":"184","severity":1,"message":"197","line":11,"column":10,"nodeType":"186","messageId":"187","endLine":11,"endColumn":14},{"ruleId":"184","severity":1,"message":"227","line":11,"column":16,"nodeType":"186","messageId":"187","endLine":11,"endColumn":24},{"ruleId":"228","severity":1,"message":"229","line":85,"column":17,"nodeType":"230","messageId":"231","endLine":85,"endColumn":18,"suggestions":"232"},{"ruleId":"228","severity":1,"message":"229","line":85,"column":40,"nodeType":"230","messageId":"231","endLine":85,"endColumn":41,"suggestions":"233"},{"ruleId":"184","severity":1,"message":"234","line":5,"column":11,"nodeType":"186","messageId":"187","endLine":5,"endColumn":15},{"ruleId":"228","severity":1,"message":"229","line":29,"column":34,"nodeType":"230","messageId":"231","endLine":29,"endColumn":35,"suggestions":"235"},{"ruleId":"228","severity":1,"message":"229","line":29,"column":57,"nodeType":"230","messageId":"231","endLine":29,"endColumn":58,"suggestions":"236"},{"ruleId":"184","severity":1,"message":"237","line":67,"column":15,"nodeType":"186","messageId":"187","endLine":67,"endColumn":20},{"ruleId":"184","severity":1,"message":"238","line":81,"column":15,"nodeType":"186","messageId":"187","endLine":81,"endColumn":24},{"ruleId":"184","severity":1,"message":"239","line":84,"column":15,"nodeType":"186","messageId":"187","endLine":84,"endColumn":20},{"ruleId":"184","severity":1,"message":"240","line":86,"column":15,"nodeType":"186","messageId":"187","endLine":86,"endColumn":25},{"ruleId":"184","severity":1,"message":"241","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":15},{"ruleId":"184","severity":1,"message":"242","line":9,"column":8,"nodeType":"186","messageId":"187","endLine":9,"endColumn":12},{"ruleId":"184","severity":1,"message":"243","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":23},{"ruleId":"184","severity":1,"message":"198","line":1,"column":25,"nodeType":"186","messageId":"187","endLine":1,"endColumn":33},"no-unused-vars","'firestore' is defined but never used.","Identifier","unusedVar","'analytics' is assigned a value but never used.","'Button' is defined but never used.","'tab' is assigned a value but never used.","'setTab' is assigned a value but never used.","'removebList' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Link' is defined but never used.","'useState' is defined but never used.","'MdFmdGood' is defined but never used.","'FastfoodIcon' is defined but never used.","'LaptopMacIcon' is defined but never used.","'HotelIcon' is defined but never used.","'RepeatIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sendReview'. Either include it or remove the dependency array.","ArrayExpression",["244"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'reviewnote' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useNavigate' is defined but never used.","'where' is defined but never used.","'orderBy' is defined but never used.","'Firestore' is defined but never used.","'getFirestore' is defined but never used.","'doc' is defined but never used.","'setDoc' is defined but never used.","'updateDoc' is defined but never used.","'arrayUnion' is defined but never used.","'arrayRemove' is defined but never used.","'i' is assigned a value but never used.","'Navigate' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["245","246"],["247","248"],"'user' is assigned a value but never used.",["249","250"],["251","252"],"'token' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'Phone' is defined but never used.","'Logo' is defined but never used.","'useRef' is defined but never used.",{"desc":"253","fix":"254"},{"messageId":"255","fix":"256","desc":"257"},{"messageId":"258","fix":"259","desc":"260"},{"messageId":"255","fix":"261","desc":"257"},{"messageId":"258","fix":"262","desc":"260"},{"messageId":"255","fix":"263","desc":"257"},{"messageId":"258","fix":"264","desc":"260"},{"messageId":"255","fix":"265","desc":"257"},{"messageId":"258","fix":"266","desc":"260"},"Update the dependencies array to be: [clicked, sendReview]",{"range":"267","text":"268"},"removeEscape",{"range":"269","text":"270"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"271","text":"272"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"273","text":"270"},{"range":"274","text":"272"},{"range":"275","text":"270"},{"range":"276","text":"272"},{"range":"277","text":"270"},{"range":"278","text":"272"},[1945,1954],"[clicked, sendReview]",[2810,2811],"",[2810,2810],"\\",[2833,2834],[2833,2833],[1030,1031],[1030,1030],[1053,1054],[1053,1053]]